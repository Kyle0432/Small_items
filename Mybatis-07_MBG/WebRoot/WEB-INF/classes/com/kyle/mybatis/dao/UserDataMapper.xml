<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyle.csdn.mapper.UserDataMapper">
  <resultMap id="BaseResultMap" type="com.kyle.csdn.pojo.UserData">
    <id column="user_data_id" jdbcType="INTEGER" property="userDataId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <!--初始化新的resultMap -->
  <resultMap id="withUserResultMap" type="com.kyle.csdn.pojo.UserData">
    <id column="user_data_id" jdbcType="INTEGER" property="userDataId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <association javaType="com.kyle.csdn.pojo.User" property="user">
           <id column="user_id" property="userId" />
		   <result column="login_name" property="loginName" />
		   <result column="login_password" property="loginPassword" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_data_id, user_id, email, birthday, gender, avatar
  </sql>
  <!-- 初始化新的sql -->
  <sql id="withUser1_Column_List">
    u.user_data_id, u.user_id, u.email, u.birthday, u.gender, u.avatar,u2.user_id, u2.login_name, u2.login_password
  </sql>
  <!-- 初始化新的select -->
  <select id="selectByExampleWithUser1" parameterType="com.kyle.csdn.pojo.UserDataExample" resultMap="withUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="withUser1_Column_List" />
    from user_data u left join user u2 on u.`user_id` = u2.`user_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kyle.csdn.pojo.UserDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_data
    where user_data_id = #{userDataId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_data
    where user_data_id = #{userDataId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kyle.csdn.pojo.UserDataExample">
    delete from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kyle.csdn.pojo.UserData">
    insert into user_data (user_data_id, user_id, email, 
      birthday, gender, avatar
      )
    values (#{userDataId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{gender,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kyle.csdn.pojo.UserData">
    insert into user_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userDataId != null">
        user_data_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userDataId != null">
        #{userDataId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kyle.csdn.pojo.UserDataExample" resultType="java.lang.Long">
    select count(*) from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_data
    <set>
      <if test="record.userDataId != null">
        user_data_id = #{record.userDataId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_data
    set user_data_id = #{record.userDataId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyle.csdn.pojo.UserData">
    update user_data
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where user_data_id = #{userDataId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kyle.csdn.pojo.UserData">
    update user_data
    set user_id = #{userId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where user_data_id = #{userDataId,jdbcType=INTEGER}
  </update>
</mapper>